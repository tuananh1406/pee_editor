# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'PeeEditor.ui'
#
# Created by: PyQt5 UI code generator 5.15.2
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_PiMage(object):
    def setupUi(self, PiMage):
        PiMage.setObjectName("PiMage")
        PiMage.resize(1032, 708)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(PiMage.sizePolicy().hasHeightForWidth())
        PiMage.setSizePolicy(sizePolicy)
        PiMage.setStyleSheet("QWidget {\n"
"  background-color: #f2f2f2;\n"
"  color: #333333;\n"
"}\n"
"\n"
"QMenuBar {\n"
"  background-color: #fff;\n"
"  margin: 0px;\n"
"  border-bottom: 1px solid #e0e0e0;\n"
"}\n"
"\n"
"QMenuBar::item {\n"
"  background-color: #fff;\n"
"  color: #333333;\n"
"  padding: 4px 10px;\n"
"  border-radius: 5px;\n"
"}\n"
"\n"
"QMenuBar::item:selected {\n"
"  background-color: #2d9cdb;\n"
"  color: #fff;\n"
"}\n"
"\n"
"QMenuBar::item:pressed {\n"
"  background-color: #2f80ed;\n"
"}\n"
"\n"
"QMenu {\n"
"  background-color: #fff;\n"
"  color: #333333;\n"
"  padding: 2px;\n"
"}\n"
"\n"
"QMenu::separator {\n"
"  color: #bdbdbd;\n"
"}\n"
"\n"
"QMenu::item {\n"
"  padding: 5px 25px;\n"
"  border: 1px;\n"
"  border-radius: 5px;\n"
"}\n"
"\n"
"QMenu::item:disabled {\n"
"  color: #828282;\n"
"  background-color: #bdbdbd;\n"
"  border-radius: 0;\n"
"}\n"
"\n"
"QMenu::item:selected {\n"
"  background-color: #2f80ed;\n"
"  color: #fff;\n"
"}\n"
"\n"
"QMenu::item:pressed {\n"
"  background-color: #2f80ed;\n"
"}\n"
"\n"
"QGroupBox {\n"
"  color: #333333;\n"
"  background-color: #e0e0e0;\n"
"  border-radius: 5px;\n"
"  font-weight: bold;\n"
"  font-size: 12px;\n"
"}\n"
"\n"
"QGroupBox > * {\n"
"  color: #333333;\n"
"  background-color: transparent;\n"
"}\n"
"\n"
"QPushButton {\n"
"  border: 1px solid #2d9cdb;\n"
"  padding: 4px;\n"
"  border-radius: 2px;\n"
"  background-color: transparent;\n"
"  color: #333333;\n"
"}\n"
"\n"
"QPushButton:hover {\n"
"  color: #fff;\n"
"  background-color: #2f80ed;\n"
"}\n"
"\n"
"QPushButton:disabled {\n"
"  color: #828282;\n"
"  background-color: #bdbdbd;\n"
"  border: none;\n"
"}\n"
"\n"
"QMessageBox QPushButton {\n"
"  padding: 5px 20px;\n"
"}\n"
"\n"
"QLineEdit {\n"
"  padding: 5px;\n"
"  border: none;\n"
"  background-color: #fff;\n"
"  border-radius: 5px;\n"
"}\n"
"")
        self.centralwidget = QtWidgets.QWidget(PiMage)
        self.centralwidget.setObjectName("centralwidget")
        self.filtersGroupBox = QtWidgets.QGroupBox(self.centralwidget)
        self.filtersGroupBox.setGeometry(QtCore.QRect(10, 410, 1011, 251))
        self.filtersGroupBox.setObjectName("filtersGroupBox")
        self.list_khung_san_pham = QtWidgets.QListWidget(self.filtersGroupBox)
        self.list_khung_san_pham.setGeometry(QtCore.QRect(230, 20, 511, 221))
        self.list_khung_san_pham.setStyleSheet("QListWidget {\n"
"  border-radius: 5px;\n"
"  background-color: #e0e0e0;\n"
"  border: 1px solid #2d9cdb;\n"
"}\n"
"\n"
"QListWidget::item {\n"
"  border-radius: 5px;\n"
"  background-color: transparent;\n"
"  color: #333333;\n"
"}\n"
"\n"
"QListWidget::item:hover {\n"
"  color: #fff;\n"
"  background-color: #2d9cdb;\n"
"}\n"
"\n"
"QListWidget::item:selected {\n"
"  color: #fff;\n"
"  background-color: #2f80ed;\n"
"}")
        self.list_khung_san_pham.setMovement(QtWidgets.QListView.Free)
        self.list_khung_san_pham.setFlow(QtWidgets.QListView.LeftToRight)
        self.list_khung_san_pham.setProperty("isWrapping", True)
        self.list_khung_san_pham.setViewMode(QtWidgets.QListView.IconMode)
        self.list_khung_san_pham.setObjectName("list_khung_san_pham")
        self.toolBox = QtWidgets.QToolBox(self.filtersGroupBox)
        self.toolBox.setGeometry(QtCore.QRect(750, 20, 251, 221))
        self.toolBox.setAutoFillBackground(False)
        self.toolBox.setStyleSheet("QToolBox {\n"
"  border-radius: 5px;\n"
"  background-color: #e0e0e0;\n"
"  border: 1px solid #2d9cdb;\n"
"}\n"
"\n"
"QToolBox::tab {\n"
"    background: #009deb;\n"
"    border-radius: 5px;\n"
"    color: black;\n"
"}\n"
"\n"
"QToolBox::tab:first {\n"
"    background: #4ade00;\n"
"    border-radius: 5px;\n"
"    color: black;\n"
"}\n"
"\n"
"QToolBox::tab:last {\n"
"    background: #f95300;\n"
"    border-radius: 5px;\n"
"    color: black;\n"
"}\n"
"\n"
"QToolBox::tab:selected { /* italicize selected tabs */\n"
"    font: italic;\n"
"    color: white;\n"
"}")
        self.toolBox.setObjectName("toolBox")
        self.page = QtWidgets.QWidget()
        self.page.setGeometry(QtCore.QRect(0, 0, 249, 157))
        self.page.setObjectName("page")
        self.rightToolsGroupBox_4 = QtWidgets.QGroupBox(self.page)
        self.rightToolsGroupBox_4.setGeometry(QtCore.QRect(0, 0, 251, 171))
        self.rightToolsGroupBox_4.setTitle("")
        self.rightToolsGroupBox_4.setObjectName("rightToolsGroupBox_4")
        self.addFrame_clicked = QtWidgets.QPushButton(self.rightToolsGroupBox_4)
        self.addFrame_clicked.setGeometry(QtCore.QRect(200, 0, 41, 21))
        self.addFrame_clicked.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.addFrame_clicked.setObjectName("addFrame_clicked")
        self.brightnessTextLabel_14 = QtWidgets.QLabel(self.rightToolsGroupBox_4)
        self.brightnessTextLabel_14.setGeometry(QtCore.QRect(60, 0, 131, 21))
        font = QtGui.QFont()
        font.setPointSize(7)
        self.brightnessTextLabel_14.setFont(font)
        self.brightnessTextLabel_14.setStyleSheet("QLabel {\n"
"  border: none;\n"
"  border-radius: 5px;\n"
"  background-color: #e0e0e0;\n"
"}\n"
"\n"
"QMessageBox QLabel {\n"
"  background-color: transparent;\n"
"}")
        self.brightnessTextLabel_14.setObjectName("brightnessTextLabel_14")
        self.imageKhungAdd = QtWidgets.QLabel(self.rightToolsGroupBox_4)
        self.imageKhungAdd.setGeometry(QtCore.QRect(10, 30, 121, 121))
        self.imageKhungAdd.setCursor(QtGui.QCursor(QtCore.Qt.ArrowCursor))
        self.imageKhungAdd.setStyleSheet("QLabel {\n"
"  border-radius: 5px;\n"
"  background-color: #e0e0e0;\n"
"  border: 1px solid #2d9cdb;\n"
"}\n"
"\n"
"QMessageBox QLabel {\n"
"  background-color: transparent;\n"
"}")
        self.imageKhungAdd.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.imageKhungAdd.setFrameShadow(QtWidgets.QFrame.Plain)
        self.imageKhungAdd.setLineWidth(1)
        self.imageKhungAdd.setText("")
        self.imageKhungAdd.setScaledContents(True)
        self.imageKhungAdd.setAlignment(QtCore.Qt.AlignCenter)
        self.imageKhungAdd.setObjectName("imageKhungAdd")
        self.check_remove_ai = QtWidgets.QCheckBox(self.rightToolsGroupBox_4)
        self.check_remove_ai.setGeometry(QtCore.QRect(150, 50, 91, 31))
        font = QtGui.QFont()
        font.setPointSize(7)
        self.check_remove_ai.setFont(font)
        self.check_remove_ai.setObjectName("check_remove_ai")
        self.apllyFrames_clicked = QtWidgets.QPushButton(self.rightToolsGroupBox_4)
        self.apllyFrames_clicked.setGeometry(QtCore.QRect(150, 120, 91, 31))
        self.apllyFrames_clicked.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.apllyFrames_clicked.setObjectName("apllyFrames_clicked")
        self.download_ImgNotGB = QtWidgets.QPushButton(self.rightToolsGroupBox_4)
        self.download_ImgNotGB.setGeometry(QtCore.QRect(10, 0, 31, 21))
        self.download_ImgNotGB.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.download_ImgNotGB.setObjectName("download_ImgNotGB")
        self.toolBox.addItem(self.page, "")
        self.page_2 = QtWidgets.QWidget()
        self.page_2.setGeometry(QtCore.QRect(0, 0, 249, 157))
        self.page_2.setObjectName("page_2")
        self.rightToolsGroupBox_3 = QtWidgets.QGroupBox(self.page_2)
        self.rightToolsGroupBox_3.setGeometry(QtCore.QRect(0, 0, 251, 171))
        self.rightToolsGroupBox_3.setTitle("")
        self.rightToolsGroupBox_3.setObjectName("rightToolsGroupBox_3")
        self.brightnessTextLabel_7 = QtWidgets.QLabel(self.rightToolsGroupBox_3)
        self.brightnessTextLabel_7.setGeometry(QtCore.QRect(140, 50, 41, 16))
        font = QtGui.QFont()
        font.setPointSize(7)
        self.brightnessTextLabel_7.setFont(font)
        self.brightnessTextLabel_7.setAlignment(QtCore.Qt.AlignCenter)
        self.brightnessTextLabel_7.setObjectName("brightnessTextLabel_7")
        self.apllyLogo_clicked = QtWidgets.QPushButton(self.rightToolsGroupBox_3)
        self.apllyLogo_clicked.setGeometry(QtCore.QRect(200, 120, 41, 31))
        self.apllyLogo_clicked.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.apllyLogo_clicked.setObjectName("apllyLogo_clicked")
        self.imageLogoAdd = QtWidgets.QLabel(self.rightToolsGroupBox_3)
        self.imageLogoAdd.setGeometry(QtCore.QRect(60, 40, 71, 71))
        self.imageLogoAdd.setCursor(QtGui.QCursor(QtCore.Qt.ArrowCursor))
        self.imageLogoAdd.setStyleSheet("QLabel {\n"
"  border-radius: 5px;\n"
"  background-color: #e0e0e0;\n"
"  border: 1px solid #2d9cdb;\n"
"}\n"
"\n"
"QMessageBox QLabel {\n"
"  background-color: transparent;\n"
"}")
        self.imageLogoAdd.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.imageLogoAdd.setFrameShadow(QtWidgets.QFrame.Plain)
        self.imageLogoAdd.setLineWidth(1)
        self.imageLogoAdd.setText("")
        self.imageLogoAdd.setScaledContents(True)
        self.imageLogoAdd.setAlignment(QtCore.Qt.AlignCenter)
        self.imageLogoAdd.setObjectName("imageLogoAdd")
        self.addLogo_clicked = QtWidgets.QPushButton(self.rightToolsGroupBox_3)
        self.addLogo_clicked.setGeometry(QtCore.QRect(70, 10, 51, 21))
        font = QtGui.QFont()
        font.setPointSize(7)
        self.addLogo_clicked.setFont(font)
        self.addLogo_clicked.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.addLogo_clicked.setObjectName("addLogo_clicked")
        self.brightnessTextLabel_8 = QtWidgets.QLabel(self.rightToolsGroupBox_3)
        self.brightnessTextLabel_8.setGeometry(QtCore.QRect(0, 50, 61, 20))
        font = QtGui.QFont()
        font.setPointSize(7)
        self.brightnessTextLabel_8.setFont(font)
        self.brightnessTextLabel_8.setAlignment(QtCore.Qt.AlignCenter)
        self.brightnessTextLabel_8.setObjectName("brightnessTextLabel_8")
        self.left_LogoValue = QtWidgets.QSpinBox(self.rightToolsGroupBox_3)
        self.left_LogoValue.setGeometry(QtCore.QRect(70, 130, 51, 20))
        self.left_LogoValue.setStyleSheet("QSpinBox {\n"
"  border-radius: 5px;\n"
"  background-color: #e0e0e0;\n"
"  border: 1px solid #2d9cdb;\n"
"}")
        self.left_LogoValue.setWrapping(False)
        self.left_LogoValue.setFrame(True)
        self.left_LogoValue.setAlignment(QtCore.Qt.AlignCenter)
        self.left_LogoValue.setReadOnly(False)
        self.left_LogoValue.setButtonSymbols(QtWidgets.QAbstractSpinBox.NoButtons)
        self.left_LogoValue.setAccelerated(False)
        self.left_LogoValue.setKeyboardTracking(True)
        self.left_LogoValue.setMinimum(0)
        self.left_LogoValue.setMaximum(1000)
        self.left_LogoValue.setProperty("value", 0)
        self.left_LogoValue.setObjectName("left_LogoValue")
        self.brightnessTextLabel_10 = QtWidgets.QLabel(self.rightToolsGroupBox_3)
        self.brightnessTextLabel_10.setGeometry(QtCore.QRect(40, 110, 111, 20))
        font = QtGui.QFont()
        font.setPointSize(7)
        self.brightnessTextLabel_10.setFont(font)
        self.brightnessTextLabel_10.setAlignment(QtCore.Qt.AlignCenter)
        self.brightnessTextLabel_10.setObjectName("brightnessTextLabel_10")
        self.top_LogoValue = QtWidgets.QSpinBox(self.rightToolsGroupBox_3)
        self.top_LogoValue.setGeometry(QtCore.QRect(10, 70, 41, 20))
        self.top_LogoValue.setStyleSheet("QSpinBox {\n"
"  border-radius: 5px;\n"
"  background-color: #e0e0e0;\n"
"  border: 1px solid #2d9cdb;\n"
"}")
        self.top_LogoValue.setWrapping(False)
        self.top_LogoValue.setFrame(True)
        self.top_LogoValue.setAlignment(QtCore.Qt.AlignCenter)
        self.top_LogoValue.setReadOnly(False)
        self.top_LogoValue.setButtonSymbols(QtWidgets.QAbstractSpinBox.NoButtons)
        self.top_LogoValue.setAccelerated(False)
        self.top_LogoValue.setKeyboardTracking(True)
        self.top_LogoValue.setMinimum(0)
        self.top_LogoValue.setMaximum(1000)
        self.top_LogoValue.setProperty("value", 0)
        self.top_LogoValue.setObjectName("top_LogoValue")
        self.size_LogoValue = QtWidgets.QSpinBox(self.rightToolsGroupBox_3)
        self.size_LogoValue.setGeometry(QtCore.QRect(140, 70, 41, 20))
        self.size_LogoValue.setStyleSheet("QSpinBox {\n"
"  border-radius: 5px;\n"
"  background-color: #e0e0e0;\n"
"  border: 1px solid #2d9cdb;\n"
"}")
        self.size_LogoValue.setWrapping(False)
        self.size_LogoValue.setFrame(True)
        self.size_LogoValue.setAlignment(QtCore.Qt.AlignCenter)
        self.size_LogoValue.setReadOnly(False)
        self.size_LogoValue.setButtonSymbols(QtWidgets.QAbstractSpinBox.NoButtons)
        self.size_LogoValue.setAccelerated(False)
        self.size_LogoValue.setKeyboardTracking(True)
        self.size_LogoValue.setMinimum(1)
        self.size_LogoValue.setMaximum(100)
        self.size_LogoValue.setProperty("value", 100)
        self.size_LogoValue.setObjectName("size_LogoValue")
        self.removeLogo_clicked = QtWidgets.QPushButton(self.rightToolsGroupBox_3)
        self.removeLogo_clicked.setGeometry(QtCore.QRect(200, 10, 41, 21))
        self.removeLogo_clicked.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.removeLogo_clicked.setObjectName("removeLogo_clicked")
        self.line = QtWidgets.QFrame(self.rightToolsGroupBox_3)
        self.line.setGeometry(QtCore.QRect(190, 10, 1, 141))
        self.line.setStyleSheet("background-color: rgb(0, 0, 0);")
        self.line.setFrameShape(QtWidgets.QFrame.VLine)
        self.line.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line.setObjectName("line")
        self.brightnessTextLabel_9 = QtWidgets.QLabel(self.rightToolsGroupBox_3)
        self.brightnessTextLabel_9.setGeometry(QtCore.QRect(0, 90, 61, 20))
        font = QtGui.QFont()
        font.setPointSize(7)
        self.brightnessTextLabel_9.setFont(font)
        self.brightnessTextLabel_9.setAlignment(QtCore.Qt.AlignCenter)
        self.brightnessTextLabel_9.setObjectName("brightnessTextLabel_9")
        self.toolBox.addItem(self.page_2, "")
        self.tree_folder_open = QtWidgets.QTreeWidget(self.filtersGroupBox)
        self.tree_folder_open.setGeometry(QtCore.QRect(10, 20, 211, 221))
        self.tree_folder_open.setStyleSheet("QTreeWidget {\n"
"  border-radius: 5px;\n"
"  background-color: #e0e0e0;\n"
"  border: 1px solid #2d9cdb;\n"
"}")
        self.tree_folder_open.setObjectName("tree_folder_open")
        self.tree_folder_open.headerItem().setText(0, "1")
        self.list_product_widget = QtWidgets.QListWidget(self.centralwidget)
        self.list_product_widget.setGeometry(QtCore.QRect(10, 10, 1011, 391))
        self.list_product_widget.setStyleSheet("QListWidget {\n"
"  border-radius: 5px;\n"
"  background-color: #e0e0e0;\n"
"  border: 1px solid #2d9cdb;\n"
"}\n"
"\n"
"QListWidget::item {\n"
"  border: none;\n"
"  border-radius: 5px;\n"
"  background-color: transparent;\n"
"  color: #333333;\n"
"}\n"
"\n"
"QListWidget::item:hover {\n"
"  color: #fff;\n"
"  background-color: #2d9cdb;\n"
"}\n"
"\n"
"QListWidget::item:selected {\n"
"  color: #fff;\n"
"  background-color: #2f80ed;\n"
"}")
        self.list_product_widget.setFlow(QtWidgets.QListView.LeftToRight)
        self.list_product_widget.setProperty("isWrapping", True)
        self.list_product_widget.setViewMode(QtWidgets.QListView.IconMode)
        self.list_product_widget.setObjectName("list_product_widget")
        PiMage.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(PiMage)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 1032, 29))
        self.menubar.setObjectName("menubar")
        self.menuFile = QtWidgets.QMenu(self.menubar)
        self.menuFile.setObjectName("menuFile")
        self.menuEdit = QtWidgets.QMenu(self.menubar)
        self.menuEdit.setObjectName("menuEdit")
        PiMage.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(PiMage)
        self.statusbar.setObjectName("statusbar")
        PiMage.setStatusBar(self.statusbar)
        self.actionOpen_File = QtWidgets.QAction(PiMage)
        self.actionOpen_File.setObjectName("actionOpen_File")
        self.actionSave_Only = QtWidgets.QAction(PiMage)
        self.actionSave_Only.setObjectName("actionSave_Only")
        self.actionSave_as = QtWidgets.QAction(PiMage)
        self.actionSave_as.setObjectName("actionSave_as")
        self.actionQuit = QtWidgets.QAction(PiMage)
        self.actionQuit.setObjectName("actionQuit")
        self.action_Information = QtWidgets.QAction(PiMage)
        self.action_Information.setObjectName("action_Information")
        self.action_Contact = QtWidgets.QAction(PiMage)
        self.action_Contact.setObjectName("action_Contact")
        self.actionOpen_Folder = QtWidgets.QAction(PiMage)
        self.actionOpen_Folder.setObjectName("actionOpen_Folder")
        self.active_WithKey = QtWidgets.QAction(PiMage)
        self.active_WithKey.setObjectName("active_WithKey")
        self.menuFile.addAction(self.active_WithKey)
        self.menuFile.addSeparator()
        self.menuFile.addAction(self.actionOpen_File)
        self.menuFile.addAction(self.actionOpen_Folder)
        self.menuFile.addSeparator()
        self.menuFile.addAction(self.actionSave_Only)
        self.menuFile.addAction(self.actionSave_as)
        self.menuFile.addSeparator()
        self.menuFile.addAction(self.actionQuit)
        self.menuEdit.addAction(self.action_Information)
        self.menuEdit.addAction(self.action_Contact)
        self.menubar.addAction(self.menuFile.menuAction())
        self.menubar.addAction(self.menuEdit.menuAction())

        self.retranslateUi(PiMage)
        self.toolBox.setCurrentIndex(0)
        QtCore.QMetaObject.connectSlotsByName(PiMage)

    def retranslateUi(self, PiMage):
        _translate = QtCore.QCoreApplication.translate
        PiMage.setWindowTitle(_translate("PiMage", "PiMage"))
        self.filtersGroupBox.setTitle(_translate("PiMage", "Tùy Biến"))
        self.addFrame_clicked.setToolTip(_translate("PiMage", "<html><head/><body><p>All changes are undone and the first image is restored.</p></body></html>"))
        self.addFrame_clicked.setText(_translate("PiMage", "+"))
        self.brightnessTextLabel_14.setText(_translate("PiMage", "Thêm Khung Sản Phẩm:"))
        self.check_remove_ai.setText(_translate("PiMage", "Remove AI...."))
        self.apllyFrames_clicked.setToolTip(_translate("PiMage", "<html><head/><body><p>All changes are undone and the first image is restored.</p></body></html>"))
        self.apllyFrames_clicked.setText(_translate("PiMage", "Thêm"))
        self.download_ImgNotGB.setToolTip(_translate("PiMage", "<html><head/><body><p>All changes are undone and the first image is restored.</p></body></html>"))
        self.download_ImgNotGB.setText(_translate("PiMage", "DL"))
        self.toolBox.setItemText(self.toolBox.indexOf(self.page), _translate("PiMage", "...Thêm Khung Của Bạn..."))
        self.brightnessTextLabel_7.setText(_translate("PiMage", "Size:"))
        self.apllyLogo_clicked.setToolTip(_translate("PiMage", "<html><head/><body><p>All changes are undone and the first image is restored.</p></body></html>"))
        self.apllyLogo_clicked.setText(_translate("PiMage", "OK"))
        self.addLogo_clicked.setToolTip(_translate("PiMage", "<html><head/><body><p>All changes are undone and the first image is restored.</p></body></html>"))
        self.addLogo_clicked.setText(_translate("PiMage", "Logo"))
        self.brightnessTextLabel_8.setText(_translate("PiMage", "| Lề Trên"))
        self.brightnessTextLabel_10.setText(_translate("PiMage", "-  Lề Trái ( 0-> 1000)"))
        self.removeLogo_clicked.setToolTip(_translate("PiMage", "<html><head/><body><p>All changes are undone and the first image is restored.</p></body></html>"))
        self.removeLogo_clicked.setText(_translate("PiMage", "X"))
        self.brightnessTextLabel_9.setText(_translate("PiMage", "0 -> 1000"))
        self.toolBox.setItemText(self.toolBox.indexOf(self.page_2), _translate("PiMage", "....Thêm Logo Của Bạn...."))
        self.menuFile.setTitle(_translate("PiMage", "File"))
        self.menuEdit.setTitle(_translate("PiMage", "Hỗ Trợ"))
        self.actionOpen_File.setText(_translate("PiMage", "(Chọn)  Hình Ảnh"))
        self.actionSave_Only.setText(_translate("PiMage", "(Lưu) Hình Ảnh"))
        self.actionSave_as.setText(_translate("PiMage", "(Lưu) Thư Mục Hình Ảnh..."))
        self.actionQuit.setText(_translate("PiMage", "Đóng Chương Trình ()"))
        self.action_Information.setText(_translate("PiMage", "Thông Tin Phần Mềm"))
        self.action_Contact.setText(_translate("PiMage", "Liên Hệ Hỗ Trợ"))
        self.actionOpen_Folder.setText(_translate("PiMage", "(Chọn) Thư Mục Hình Ảnh"))
        self.active_WithKey.setText(_translate("PiMage", "Active With Key..."))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    PiMage = QtWidgets.QMainWindow()
    ui = Ui_PiMage()
    ui.setupUi(PiMage)
    PiMage.show()
    sys.exit(app.exec_())
